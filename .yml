dist: focal
language: node_js
node_js: 12
cache:
  directories:
  - node_modules
  - $HOME/google-cloud-sdk
script:
  - npm run build
  - npm test
env:
  global:
    - GCP_ENV=$(if [[ "$TRAVIS_BRANCH" = "master" ]]; then echo "prod"; else if [[ "$TRAVIS_BRANCH" = "qa" ]]; then echo "qa"; else if [[ "$TRAVIS_BRANCH" = *"_prod"* ]]; then echo $TRAVIS_BRANCH; else echo "dev"; fi; fi; fi)
    - GCP_PROJECT_ID=$(echo "${GCP_ENV}_project_id")
    - IMAGE=jwt-poc-be
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - SHA=$(git rev-parse HEAD)
    - REGISTRY_ZONE=$(echo "regristry_zone_${GCP_ENV}")
    - CLUSTER=$(echo "cluster_${GCP_ENV}")
    - CLUSTER_TEST=$(echo "cluster_test_${GCP_ENV}")
    - GKE_ZONE=$(echo "gke_zone_${GCP_ENV}")
    - REQUEST_MEMORY=$(echo "request_memory_${GCP_ENV}")
    - REQUEST_MEMORY_LIMIT=$(echo "request_memory_limit_${GCP_ENV}")
    - REQUEST_CPU=$(echo "request_cpu_${GCP_ENV}")
    - REQUEST_CPU_LIMIT=$(echo "request_cpu_limit_${GCP_ENV}")
    - REPLICAS=$(echo "replicas_${GCP_ENV}")
notifications:
  email: false
  slack:
    rooms: bpsmart:cOFxwweHbT66YDbMwzgUaCZJ
    template:
      - 'Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}: ''%{commit_subject}''>)  by
      %{author} for %{repository_name}@%{branch}, %{result} in %{duration}. <%{build_url}|Check
      details>.'
before_install:
  - openssl aes-256-cbc -K $encrypted_f12d31c81309_key -iv $encrypted_f12d31c81309_iv
    -in ./deploy/ci-sec.tar.enc -out ./deploy/ci-sec.tar -d
  - tar xvf ./deploy/ci-sec.tar -C ./deploy/ &>/dev/null
  - gcloud auth activate-service-account --key-file ./deploy/travisci-bpsmart-${GCP_ENV}-service.json
  - gcloud config set project $(echo "${!GCP_PROJECT_ID}")
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf "$HOME/google-cloud-sdk"; curl https://sdk.cloud.google.com | bash > /dev/null; fi
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components install kubectl
before_script:
  - chmod +x ./deploy/*.sh
  - "./deploy/pre_deploy.sh"
deploy:
  provider: script
  script: ./deploy/gke_deploy.sh
  skip_cleanup: true
  on:
    all_branches: true
    condition: '"$(./deploy/can_deploy.sh $TRAVIS_BRANCH $TRAVIS_COMMIT_MESSAGE)" == "1"'
after_success:
  - if [ "$TRAVIS_PULL_REQUEST_MERGED" = "true" ]; then
    - chmod +x ./scripts/configure_and_commit.sh
    - ./scripts/configure_and_commit.sh $TRAVIS_EVENT_TYPE $TRAVIS_REPO_SLUG
    - chmod +x ./scripts/reintegrate.sh
    - ./scripts/reintegrate.sh $TRAVIS_EVENT_TYPE $TRAVIS_REPO_SLUG $GH_TOKEN
  fi
